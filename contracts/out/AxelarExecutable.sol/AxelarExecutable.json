{"abi":[{"type":"function","name":"execute","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChain","type":"string","internalType":"string"},{"name":"sourceAddress","type":"string","internalType":"string"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"gateway","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAxelarGateway"}],"stateMutability":"view"},{"type":"error","name":"InvalidAddress","inputs":[]},{"type":"error","name":"NotApprovedByGateway","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute(bytes32,string,string,bytes)":"49160658","gateway()":"116191b6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedByGateway\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateway\",\"outputs\":[{\"internalType\":\"contract IAxelarGateway\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract to be inherited by contracts that need to execute cross-chain commands via Axelar's Gateway. It implements the IAxelarExecutable interface.\",\"errors\":{\"InvalidAddress()\":[{\"details\":\"Thrown when a function is called with an invalid address.\"}],\"NotApprovedByGateway()\":[{\"details\":\"Thrown when the call is not approved by the Axelar Gateway.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor that sets the Axelar Gateway address. Reverts if the provided address is the zero address.\",\"params\":{\"gateway_\":\"The address of the Axelar Gateway contract.\"}},\"execute(bytes32,string,string,bytes)\":{\"details\":\"This function ensures the call is approved by Axelar Gateway before execution. It uses a hash of the payload for validation and internally calls _execute for the actual command execution. Reverts if the validation fails.\",\"params\":{\"commandId\":\"The unique identifier of the cross-chain message being executed.\",\"payload\":\"The payload of the message payload.\",\"sourceAddress\":\"The address on the source chain that sent the message.\",\"sourceChain\":\"The name of the source chain from which the message originated.\"}},\"gateway()\":{\"returns\":{\"_0\":\"The Axelar Gateway instance.\"}}},\"stateVariables\":{\"gatewayAddress\":{\"details\":\"Reference to the Axelar Gateway contract.\"}},\"title\":\"AxelarExecutable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(bytes32,string,string,bytes)\":{\"notice\":\"Executes the cross-chain command after validating it with the Axelar Gateway.\"},\"gateway()\":{\"notice\":\"Returns the address of the AxelarGateway contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol\":\"AxelarExecutable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol\":{\"keccak256\":\"0x89078799d3ff3501cb859e3b87c9ac9541dd54bcdeb194b230324a2d74f6a74a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e24a3b23e54b4fa45e2184da956a04a76b68dbc27b5706f465d8989ecb7109\",\"dweb:/ipfs/QmeFzVaUCYWgHAt9sCF62cUkGpvFfchH3riu7ZQCd5f8RP\"]},\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarExecutable.sol\":{\"keccak256\":\"0xc62de7533d4891bfd5bd8792e6638cb1d3ff4389dee2ce1f1dc8de235a057daa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f934a6afcebde328dbf271af65a24370618f173c65f705739fb16e7f99195c15\",\"dweb:/ipfs/QmZ61TPX1wPk3UDhpGxktTdYvgei3kBG1iCMYLt99ANwhN\"]},\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol\":{\"keccak256\":\"0xbd92798eade563d8a663db59f6f04db5acdee5beda3a6d091e44a7d5c6b2f68e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1519882aed7b6de2ee1e316e5188d2bda1e305fc18a96b3895831f49dc9f90b0\",\"dweb:/ipfs/QmYTLwLGwmDkyX6GSE6PU93TkWP5mFz8qhmFyBrWfj6gaB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidAddress"},{"inputs":[],"type":"error","name":"NotApprovedByGateway"},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"string","name":"sourceAddress","type":"string"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[],"stateMutability":"view","type":"function","name":"gateway","outputs":[{"internalType":"contract IAxelarGateway","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Contract constructor that sets the Axelar Gateway address. Reverts if the provided address is the zero address.","params":{"gateway_":"The address of the Axelar Gateway contract."}},"execute(bytes32,string,string,bytes)":{"details":"This function ensures the call is approved by Axelar Gateway before execution. It uses a hash of the payload for validation and internally calls _execute for the actual command execution. Reverts if the validation fails.","params":{"commandId":"The unique identifier of the cross-chain message being executed.","payload":"The payload of the message payload.","sourceAddress":"The address on the source chain that sent the message.","sourceChain":"The name of the source chain from which the message originated."}},"gateway()":{"returns":{"_0":"The Axelar Gateway instance."}}},"version":1},"userdoc":{"kind":"user","methods":{"execute(bytes32,string,string,bytes)":{"notice":"Executes the cross-chain command after validating it with the Axelar Gateway."},"gateway()":{"notice":"Returns the address of the AxelarGateway contract."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol":"AxelarExecutable"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol":{"keccak256":"0x89078799d3ff3501cb859e3b87c9ac9541dd54bcdeb194b230324a2d74f6a74a","urls":["bzz-raw://d7e24a3b23e54b4fa45e2184da956a04a76b68dbc27b5706f465d8989ecb7109","dweb:/ipfs/QmeFzVaUCYWgHAt9sCF62cUkGpvFfchH3riu7ZQCd5f8RP"],"license":"MIT"},"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarExecutable.sol":{"keccak256":"0xc62de7533d4891bfd5bd8792e6638cb1d3ff4389dee2ce1f1dc8de235a057daa","urls":["bzz-raw://f934a6afcebde328dbf271af65a24370618f173c65f705739fb16e7f99195c15","dweb:/ipfs/QmZ61TPX1wPk3UDhpGxktTdYvgei3kBG1iCMYLt99ANwhN"],"license":"MIT"},"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol":{"keccak256":"0xbd92798eade563d8a663db59f6f04db5acdee5beda3a6d091e44a7d5c6b2f68e","urls":["bzz-raw://1519882aed7b6de2ee1e316e5188d2bda1e305fc18a96b3895831f49dc9f90b0","dweb:/ipfs/QmYTLwLGwmDkyX6GSE6PU93TkWP5mFz8qhmFyBrWfj6gaB"],"license":"MIT"}},"version":1},"id":0}