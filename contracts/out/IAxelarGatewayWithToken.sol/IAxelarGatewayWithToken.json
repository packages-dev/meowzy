{"abi":[{"type":"function","name":"callContract","inputs":[{"name":"destinationChain","type":"string","internalType":"string"},{"name":"contractAddress","type":"string","internalType":"string"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"callContractWithToken","inputs":[{"name":"destinationChain","type":"string","internalType":"string"},{"name":"contractAddress","type":"string","internalType":"string"},{"name":"payload","type":"bytes","internalType":"bytes"},{"name":"symbol","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isCommandExecuted","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isContractCallAndMintApproved","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChain","type":"string","internalType":"string"},{"name":"sourceAddress","type":"string","internalType":"string"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"payloadHash","type":"bytes32","internalType":"bytes32"},{"name":"symbol","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isContractCallApproved","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChain","type":"string","internalType":"string"},{"name":"sourceAddress","type":"string","internalType":"string"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"payloadHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"sendToken","inputs":[{"name":"destinationChain","type":"string","internalType":"string"},{"name":"destinationAddress","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"tokenAddresses","inputs":[{"name":"symbol","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"validateContractCall","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChain","type":"string","internalType":"string"},{"name":"sourceAddress","type":"string","internalType":"string"},{"name":"payloadHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"validateContractCallAndMint","inputs":[{"name":"commandId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChain","type":"string","internalType":"string"},{"name":"sourceAddress","type":"string","internalType":"string"},{"name":"payloadHash","type":"bytes32","internalType":"bytes32"},{"name":"symbol","type":"string","internalType":"string"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"ContractCall","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"destinationChain","type":"string","indexed":false,"internalType":"string"},{"name":"destinationContractAddress","type":"string","indexed":false,"internalType":"string"},{"name":"payloadHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"payload","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ContractCallApprovedWithMint","inputs":[{"name":"commandId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"sourceChain","type":"string","indexed":false,"internalType":"string"},{"name":"sourceAddress","type":"string","indexed":false,"internalType":"string"},{"name":"contractAddress","type":"address","indexed":true,"internalType":"address"},{"name":"payloadHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"symbol","type":"string","indexed":false,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"sourceTxHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"sourceEventIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ContractCallWithToken","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"destinationChain","type":"string","indexed":false,"internalType":"string"},{"name":"destinationContractAddress","type":"string","indexed":false,"internalType":"string"},{"name":"payloadHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"payload","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"symbol","type":"string","indexed":false,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokenSent","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"destinationChain","type":"string","indexed":false,"internalType":"string"},{"name":"destinationAddress","type":"string","indexed":false,"internalType":"string"},{"name":"symbol","type":"string","indexed":false,"internalType":"string"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"callContract(string,string,bytes)":"1c92115f","callContractWithToken(string,string,bytes,string,uint256)":"b5417084","isCommandExecuted(bytes32)":"d26ff210","isContractCallAndMintApproved(bytes32,string,string,address,bytes32,string,uint256)":"bc00c216","isContractCallApproved(bytes32,string,string,address,bytes32)":"f6a5f9f5","sendToken(string,string,string,uint256)":"26ef699d","tokenAddresses(string)":"935b13f6","validateContractCall(bytes32,string,string,bytes32)":"5f6970c3","validateContractCallAndMint(bytes32,string,string,bytes32,string,uint256)":"1876eed9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationContractAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"ContractCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sourceTxHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceEventIndex\",\"type\":\"uint256\"}],\"name\":\"ContractCallApprovedWithMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationContractAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContractCallWithToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destinationAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractAddress\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"callContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractAddress\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"callContractWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"}],\"name\":\"isCommandExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isContractCallAndMintApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"isContractCallApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destinationAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"tokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"validateContractCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commandId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"sourceChain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sourceAddress\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"validateContractCallAndMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the Axelar Gateway that supports cross-chain token transfers coupled with general message passing. It extends IAxelarGateway to include token-related functionality.\",\"events\":{\"ContractCall(address,string,string,bytes32,bytes)\":{\"details\":\"Logs the attempt to call a contract on another chain.\",\"params\":{\"destinationChain\":\"The name of the destination chain.\",\"destinationContractAddress\":\"The address of the contract on the destination chain.\",\"payload\":\"The payload data used for the contract call.\",\"payloadHash\":\"The keccak256 hash of the sent payload data.\",\"sender\":\"The address of the sender who initiated the contract call.\"}},\"ContractCallApprovedWithMint(bytes32,string,string,address,bytes32,string,uint256,bytes32,uint256)\":{\"details\":\"Logs the approval of a contract call that originated from another chain and involves a token minting process.\",\"params\":{\"amount\":\"The amount of the tokens being minted.\",\"commandId\":\"The identifier of the command to execute.\",\"contractAddress\":\"The address of the contract where the call will be executed.\",\"payloadHash\":\"The keccak256 hash of the approved payload data.\",\"sourceAddress\":\"The address of the sender on the source chain.\",\"sourceChain\":\"The name of the source chain from whence the command came.\",\"sourceEventIndex\":\"The index of the event in the source transaction logs.\",\"sourceTxHash\":\"The hash of the source transaction on the source chain.\",\"symbol\":\"The symbol of the token being minted.\"}},\"ContractCallWithToken(address,string,string,bytes32,bytes,string,uint256)\":{\"details\":\"Logs the attempt to call a contract on another chain with an associated token transfer.\",\"params\":{\"amount\":\"The amount of the tokens being transferred.\",\"destinationChain\":\"The name of the destination chain.\",\"destinationContractAddress\":\"The address of the contract on the destination chain.\",\"payload\":\"The payload data used for the contract call.\",\"payloadHash\":\"The keccak256 hash of the sent payload data.\",\"sender\":\"The address of the sender who initiated the contract call with token.\",\"symbol\":\"The symbol of the token being transferred.\"}},\"TokenSent(address,string,string,string,uint256)\":{\"details\":\"Logs the attempt to send tokens to a recipient on another chain.\",\"params\":{\"amount\":\"The amount of the tokens being transferred.\",\"destinationAddress\":\"The address of the recipient on the destination chain.\",\"destinationChain\":\"The name of the destination chain.\",\"sender\":\"The address of the sender who initiated the token transfer.\",\"symbol\":\"The symbol of the token being transferred.\"}}},\"kind\":\"dev\",\"methods\":{\"callContract(string,string,bytes)\":{\"details\":\"Initiates a cross-chain contract call through the gateway to the specified destination chain and contract.\",\"params\":{\"contractAddress\":\"The address of the contract on the destination chain.\",\"destinationChain\":\"The name of the destination chain.\",\"payload\":\"The payload data to be used in the contract call.\"}},\"callContractWithToken(string,string,bytes,string,uint256)\":{\"details\":\"Initiates a cross-chain contract call through the gateway that includes a token transfer to the specified contract on the destination chain.\",\"params\":{\"amount\":\"The amount of the tokens being transferred.\",\"contractAddress\":\"The address of the contract on the destination chain.\",\"destinationChain\":\"The name of the destination chain.\",\"payload\":\"The payload data to be used in the contract call.\",\"symbol\":\"The symbol of the token being transferred.\"}},\"isCommandExecuted(bytes32)\":{\"details\":\"Determines whether a command, identified by the commandId, has been executed.\",\"params\":{\"commandId\":\"The identifier of the command to check.\"},\"returns\":{\"_0\":\"True if the command has been executed, false otherwise.\"}},\"isContractCallAndMintApproved(bytes32,string,string,address,bytes32,string,uint256)\":{\"details\":\"Determines whether a given contract call, identified by the commandId and payloadHash, involving token minting is approved.\",\"params\":{\"amount\":\"The amount of the tokens to be minted.\",\"commandId\":\"The identifier of the command to check.\",\"contractAddress\":\"The address of the contract where the call will be executed.\",\"payloadHash\":\"The keccak256 hash of the payload data.\",\"sourceAddress\":\"The address of the sender on the source chain.\",\"sourceChain\":\"The name of the source chain.\",\"symbol\":\"The symbol of the token associated with the minting.\"},\"returns\":{\"_0\":\"True if the contract call with token minting is approved, false otherwise.\"}},\"isContractCallApproved(bytes32,string,string,address,bytes32)\":{\"details\":\"Determines whether a given contract call, identified by the commandId and payloadHash, is approved.\",\"params\":{\"commandId\":\"The identifier of the command to check.\",\"contractAddress\":\"The address of the contract where the call will be executed.\",\"payloadHash\":\"The keccak256 hash of the payload data.\",\"sourceAddress\":\"The address of the sender on the source chain.\",\"sourceChain\":\"The name of the source chain.\"},\"returns\":{\"_0\":\"True if the contract call is approved, false otherwise.\"}},\"sendToken(string,string,string,uint256)\":{\"details\":\"Initiates a cross-chain token transfer through the gateway to the specified destination chain and recipient.\",\"params\":{\"amount\":\"The amount of the tokens being transferred.\",\"destinationAddress\":\"The address of the recipient on the destination chain.\",\"destinationChain\":\"The name of the destination chain.\",\"symbol\":\"The symbol of the token being transferred.\"}},\"tokenAddresses(string)\":{\"details\":\"Gets the contract address of the token registered with the given symbol.\",\"params\":{\"symbol\":\"The symbol of the token to retrieve the address for.\"},\"returns\":{\"_0\":\"The contract address of the token corresponding to the given symbol.\"}},\"validateContractCall(bytes32,string,string,bytes32)\":{\"details\":\"Validates the given contract call information and marks it as approved if valid.\",\"params\":{\"commandId\":\"The identifier of the command to validate.\",\"payloadHash\":\"The keccak256 hash of the payload data.\",\"sourceAddress\":\"The address of the sender on the source chain.\",\"sourceChain\":\"The name of the source chain.\"},\"returns\":{\"_0\":\"True if the contract call is validated and approved, false otherwise.\"}},\"validateContractCallAndMint(bytes32,string,string,bytes32,string,uint256)\":{\"details\":\"Validates the given contract call information and marks it as approved if valid. It also involves the minting of tokens.\",\"params\":{\"amount\":\"The amount of the tokens to be minted.\",\"commandId\":\"The identifier of the command to validate.\",\"payloadHash\":\"The keccak256 hash of the payload data.\",\"sourceAddress\":\"The address of the sender on the source chain.\",\"sourceChain\":\"The name of the source chain.\",\"symbol\":\"The symbol of the token associated with the minting.\"},\"returns\":{\"_0\":\"True if the contract call with token minting is validated and approved, false otherwise.\"}}},\"title\":\"IAxelarGatewayWithToken\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCall(address,string,string,bytes32,bytes)\":{\"notice\":\"Emitted when a contract call is made through the gateway.\"},\"ContractCallApprovedWithMint(bytes32,string,string,address,bytes32,string,uint256,bytes32,uint256)\":{\"notice\":\"Emitted when a contract call with a token minting is approved.\"},\"ContractCallWithToken(address,string,string,bytes32,bytes,string,uint256)\":{\"notice\":\"Emitted when a contract call is made through the gateway along with a token transfer.\"},\"TokenSent(address,string,string,string,uint256)\":{\"notice\":\"Emitted when a token is sent to another chain.\"}},\"kind\":\"user\",\"methods\":{\"callContract(string,string,bytes)\":{\"notice\":\"Sends a contract call to another chain.\"},\"callContractWithToken(string,string,bytes,string,uint256)\":{\"notice\":\"Makes a contract call on another chain with an associated token transfer.\"},\"isCommandExecuted(bytes32)\":{\"notice\":\"Checks if a command has been executed.\"},\"isContractCallAndMintApproved(bytes32,string,string,address,bytes32,string,uint256)\":{\"notice\":\"Checks if a contract call with token minting is approved.\"},\"isContractCallApproved(bytes32,string,string,address,bytes32)\":{\"notice\":\"Checks if a contract call is approved.\"},\"sendToken(string,string,string,uint256)\":{\"notice\":\"Sends tokens to another chain.\"},\"tokenAddresses(string)\":{\"notice\":\"Retrieves the address of a token given its symbol.\"},\"validateContractCall(bytes32,string,string,bytes32)\":{\"notice\":\"Validates and approves a contract call.\"},\"validateContractCallAndMint(bytes32,string,string,bytes32,string,uint256)\":{\"notice\":\"Validates and approves a contract call with token minting.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGatewayWithToken.sol\":\"IAxelarGatewayWithToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol\":{\"keccak256\":\"0xbd92798eade563d8a663db59f6f04db5acdee5beda3a6d091e44a7d5c6b2f68e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1519882aed7b6de2ee1e316e5188d2bda1e305fc18a96b3895831f49dc9f90b0\",\"dweb:/ipfs/QmYTLwLGwmDkyX6GSE6PU93TkWP5mFz8qhmFyBrWfj6gaB\"]},\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGatewayWithToken.sol\":{\"keccak256\":\"0x329e48b578b9044843af57f6f464a96af8c3da82e660254099425fe9c117b219\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://693d2ad06b6281ccd0f47b0d0e585bf24abb7f5dcaeacacf73ac54e8a3468d87\",\"dweb:/ipfs/QmYVvadiEL5CggCwLdZi7q38uZWMhqNyS7dfjWbNYXjgDw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"string","name":"destinationChain","type":"string","indexed":false},{"internalType":"string","name":"destinationContractAddress","type":"string","indexed":false},{"internalType":"bytes32","name":"payloadHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"payload","type":"bytes","indexed":false}],"type":"event","name":"ContractCall","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32","indexed":true},{"internalType":"string","name":"sourceChain","type":"string","indexed":false},{"internalType":"string","name":"sourceAddress","type":"string","indexed":false},{"internalType":"address","name":"contractAddress","type":"address","indexed":true},{"internalType":"bytes32","name":"payloadHash","type":"bytes32","indexed":true},{"internalType":"string","name":"symbol","type":"string","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"bytes32","name":"sourceTxHash","type":"bytes32","indexed":false},{"internalType":"uint256","name":"sourceEventIndex","type":"uint256","indexed":false}],"type":"event","name":"ContractCallApprovedWithMint","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"string","name":"destinationChain","type":"string","indexed":false},{"internalType":"string","name":"destinationContractAddress","type":"string","indexed":false},{"internalType":"bytes32","name":"payloadHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"payload","type":"bytes","indexed":false},{"internalType":"string","name":"symbol","type":"string","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ContractCallWithToken","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"string","name":"destinationChain","type":"string","indexed":false},{"internalType":"string","name":"destinationAddress","type":"string","indexed":false},{"internalType":"string","name":"symbol","type":"string","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"TokenSent","anonymous":false},{"inputs":[{"internalType":"string","name":"destinationChain","type":"string"},{"internalType":"string","name":"contractAddress","type":"string"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"callContract"},{"inputs":[{"internalType":"string","name":"destinationChain","type":"string"},{"internalType":"string","name":"contractAddress","type":"string"},{"internalType":"bytes","name":"payload","type":"bytes"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"callContractWithToken"},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isCommandExecuted","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"string","name":"sourceAddress","type":"string"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"isContractCallAndMintApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"string","name":"sourceAddress","type":"string"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isContractCallApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"destinationChain","type":"string"},{"internalType":"string","name":"destinationAddress","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sendToken"},{"inputs":[{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"view","type":"function","name":"tokenAddresses","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"string","name":"sourceAddress","type":"string"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"validateContractCall","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"commandId","type":"bytes32"},{"internalType":"string","name":"sourceChain","type":"string"},{"internalType":"string","name":"sourceAddress","type":"string"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateContractCallAndMint","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"callContract(string,string,bytes)":{"details":"Initiates a cross-chain contract call through the gateway to the specified destination chain and contract.","params":{"contractAddress":"The address of the contract on the destination chain.","destinationChain":"The name of the destination chain.","payload":"The payload data to be used in the contract call."}},"callContractWithToken(string,string,bytes,string,uint256)":{"details":"Initiates a cross-chain contract call through the gateway that includes a token transfer to the specified contract on the destination chain.","params":{"amount":"The amount of the tokens being transferred.","contractAddress":"The address of the contract on the destination chain.","destinationChain":"The name of the destination chain.","payload":"The payload data to be used in the contract call.","symbol":"The symbol of the token being transferred."}},"isCommandExecuted(bytes32)":{"details":"Determines whether a command, identified by the commandId, has been executed.","params":{"commandId":"The identifier of the command to check."},"returns":{"_0":"True if the command has been executed, false otherwise."}},"isContractCallAndMintApproved(bytes32,string,string,address,bytes32,string,uint256)":{"details":"Determines whether a given contract call, identified by the commandId and payloadHash, involving token minting is approved.","params":{"amount":"The amount of the tokens to be minted.","commandId":"The identifier of the command to check.","contractAddress":"The address of the contract where the call will be executed.","payloadHash":"The keccak256 hash of the payload data.","sourceAddress":"The address of the sender on the source chain.","sourceChain":"The name of the source chain.","symbol":"The symbol of the token associated with the minting."},"returns":{"_0":"True if the contract call with token minting is approved, false otherwise."}},"isContractCallApproved(bytes32,string,string,address,bytes32)":{"details":"Determines whether a given contract call, identified by the commandId and payloadHash, is approved.","params":{"commandId":"The identifier of the command to check.","contractAddress":"The address of the contract where the call will be executed.","payloadHash":"The keccak256 hash of the payload data.","sourceAddress":"The address of the sender on the source chain.","sourceChain":"The name of the source chain."},"returns":{"_0":"True if the contract call is approved, false otherwise."}},"sendToken(string,string,string,uint256)":{"details":"Initiates a cross-chain token transfer through the gateway to the specified destination chain and recipient.","params":{"amount":"The amount of the tokens being transferred.","destinationAddress":"The address of the recipient on the destination chain.","destinationChain":"The name of the destination chain.","symbol":"The symbol of the token being transferred."}},"tokenAddresses(string)":{"details":"Gets the contract address of the token registered with the given symbol.","params":{"symbol":"The symbol of the token to retrieve the address for."},"returns":{"_0":"The contract address of the token corresponding to the given symbol."}},"validateContractCall(bytes32,string,string,bytes32)":{"details":"Validates the given contract call information and marks it as approved if valid.","params":{"commandId":"The identifier of the command to validate.","payloadHash":"The keccak256 hash of the payload data.","sourceAddress":"The address of the sender on the source chain.","sourceChain":"The name of the source chain."},"returns":{"_0":"True if the contract call is validated and approved, false otherwise."}},"validateContractCallAndMint(bytes32,string,string,bytes32,string,uint256)":{"details":"Validates the given contract call information and marks it as approved if valid. It also involves the minting of tokens.","params":{"amount":"The amount of the tokens to be minted.","commandId":"The identifier of the command to validate.","payloadHash":"The keccak256 hash of the payload data.","sourceAddress":"The address of the sender on the source chain.","sourceChain":"The name of the source chain.","symbol":"The symbol of the token associated with the minting."},"returns":{"_0":"True if the contract call with token minting is validated and approved, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"callContract(string,string,bytes)":{"notice":"Sends a contract call to another chain."},"callContractWithToken(string,string,bytes,string,uint256)":{"notice":"Makes a contract call on another chain with an associated token transfer."},"isCommandExecuted(bytes32)":{"notice":"Checks if a command has been executed."},"isContractCallAndMintApproved(bytes32,string,string,address,bytes32,string,uint256)":{"notice":"Checks if a contract call with token minting is approved."},"isContractCallApproved(bytes32,string,string,address,bytes32)":{"notice":"Checks if a contract call is approved."},"sendToken(string,string,string,uint256)":{"notice":"Sends tokens to another chain."},"tokenAddresses(string)":{"notice":"Retrieves the address of a token given its symbol."},"validateContractCall(bytes32,string,string,bytes32)":{"notice":"Validates and approves a contract call."},"validateContractCallAndMint(bytes32,string,string,bytes32,string,uint256)":{"notice":"Validates and approves a contract call with token minting."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGatewayWithToken.sol":"IAxelarGatewayWithToken"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol":{"keccak256":"0xbd92798eade563d8a663db59f6f04db5acdee5beda3a6d091e44a7d5c6b2f68e","urls":["bzz-raw://1519882aed7b6de2ee1e316e5188d2bda1e305fc18a96b3895831f49dc9f90b0","dweb:/ipfs/QmYTLwLGwmDkyX6GSE6PU93TkWP5mFz8qhmFyBrWfj6gaB"],"license":"MIT"},"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGatewayWithToken.sol":{"keccak256":"0x329e48b578b9044843af57f6f464a96af8c3da82e660254099425fe9c117b219","urls":["bzz-raw://693d2ad06b6281ccd0f47b0d0e585bf24abb7f5dcaeacacf73ac54e8a3468d87","dweb:/ipfs/QmYVvadiEL5CggCwLdZi7q38uZWMhqNyS7dfjWbNYXjgDw"],"license":"MIT"}},"version":1},"id":6}